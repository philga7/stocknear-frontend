# StockNear Backend Makefile
# Provides convenient commands for managing backend services with cross-repo development support

.PHONY: help setup start stop restart logs status clean test build shell backend-api backend-redis backend-fastify backend-full dev prod detect fullstack fullstack-dev fullstack-prod fullstack-test fullstack-build fullstack-clean fullstack-logs fullstack-status fullstack-shell fullstack-hybrid fullstack-hybrid-dev fullstack-hybrid-prod fullstack-cross-repo fullstack-mode-detect

# Default target
help:
	@echo "StockNear Backend Docker Management with Cross-Repo Support"
	@echo ""
	@echo "Available commands:"
	@echo "  setup    - Initialize and start all backend services"
	@echo "  start    - Start all backend services"
	@echo "  stop     - Stop all backend services"
	@echo "  stop-api - Stop FastAPI service only"
	@echo "  stop-redis   - Stop Redis service only"
	@echo "  stop-fastify - Stop Fastify service only"
	@echo "  restart  - Restart all backend services"
	@echo "  logs     - View logs for all backend services"
	@echo "  status   - Show status of all backend services"
	@echo "  clean    - Stop services and clean up"
	@echo "  test     - Test all backend service endpoints"
	@echo "  build    - Build all backend Docker images"
	@echo "  shell    - Open shell in backend container"
	@echo ""
	@echo "Service-specific commands:"
	@echo "  backend-api    - Start FastAPI service only"
	@echo "  backend-redis  - Start Redis service only"
	@echo "  backend-fastify- Start Fastify service only"
	@echo "  backend-full   - Start all backend services"
	@echo ""
	@echo "Cross-repo development commands:"
	@echo "  dev            - Start development mode with hot reload"
	@echo "  prod           - Start production mode"
	@echo "  detect         - Run mode detection script"
	@echo "  backend-dev    - Start backend in development mode"
	@echo "  backend-prod   - Start backend in production mode"
	@echo ""
	@echo "Full-Stack Development Commands:"
	@echo "  fullstack           - Start full-stack development with all services"
	@echo "  fullstack-dev       - Start full-stack in development mode"
	@echo "  fullstack-prod      - Start full-stack in production mode"
	@echo "  fullstack-test      - Test full-stack endpoints"
	@echo "  fullstack-build     - Build full-stack Docker images"
	@echo "  fullstack-clean     - Clean full-stack environment"
	@echo "  fullstack-logs      - View full-stack logs"
	@echo "  fullstack-status    - Show full-stack status"
	@echo "  fullstack-shell     - Open shell in full-stack container"
	@echo "  fullstack-hybrid    - Start full-stack with hybrid backend integration"
	@echo "  fullstack-hybrid-dev- Start full-stack hybrid in development mode"
	@echo "  fullstack-hybrid-prod- Start full-stack hybrid in production mode"
	@echo "  fullstack-cross-repo- Full-stack with cross-repo development support"
	@echo "  fullstack-mode-detect- Run full-stack mode detection"
	@echo ""
	@echo "Database management:"
	@echo "  db-reset       - Reset all backend databases"
	@echo "  db-backup      - Backup backend databases"
	@echo "  db-restore     - Restore backend databases"
	@echo ""
	@echo "Backend development commands:"
	@echo "  api-logs       - View FastAPI logs"
	@echo "  redis-logs     - View Redis logs"
	@echo "  fastify-logs   - View Fastify logs"
	@echo "  api-shell      - Open shell in FastAPI container"
	@echo "  fastify-shell  - Open shell in Fastify container"

# Mode detection
detect:
	@echo "üîç Running backend mode detection..."
	@./scripts/detect-mode.sh

# Initialize and start all backend services
setup:
	@echo "üöÄ Setting up StockNear Backend..."
	@./scripts/detect-mode.sh
	@docker-compose --profile backend up -d --build
	@echo "Backend setup complete!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

# Start all backend services
start:
	@echo "Starting backend services..."
	@./scripts/detect-mode.sh
	@docker-compose --profile backend up -d

# Stop all backend services
stop:
	@echo "Stopping all backend services..."
	@docker-compose --profile backend down

# Stop individual backend services
stop-api:
	@echo "Stopping FastAPI service..."
	@docker-compose stop fastapi || docker-compose --profile backend stop fastapi

stop-redis:
	@echo "Stopping Redis service..."
	@docker-compose stop redis || docker-compose --profile backend stop redis

stop-fastify:
	@echo "Stopping Fastify service..."
	@docker-compose stop fastify || docker-compose --profile backend stop fastify

# Restart all backend services
restart:
	@echo "Restarting backend services..."
	@docker-compose --profile backend restart

# View logs for all backend services
logs:
	@docker-compose --profile backend logs -f

# Show status of all backend services
status:
	@docker-compose --profile backend ps

# Stop services and clean up
clean:
	@echo "Cleaning up backend services..."
	@docker-compose --profile backend down
	@docker system prune -f

# Test all backend service endpoints
test:
	@echo "Testing backend service endpoints..."
	@echo "Testing FastAPI backend..."
	@curl -s http://localhost:8000/ || echo "FastAPI backend not responding"
	@echo "Testing Fastify service..."
	@curl -s http://localhost:2000/health || echo "Fastify service not responding"
	@echo "Testing Redis connection..."
	@docker-compose --profile backend exec redis redis-cli ping || echo "Redis not responding"

# Build all backend Docker images
build:
	@echo "Building backend Docker images..."
	@./scripts/detect-mode.sh
	@docker-compose --profile backend build

# Open shell in backend container
shell:
	@docker-compose --profile backend exec fastapi sh

# Service-specific commands
backend-api:
	@echo "üöÄ Starting FastAPI service..."
	@./scripts/detect-mode.sh
	@docker-compose --profile backend up -d fastapi
	@echo "FastAPI service started! Access at http://localhost:8000"

backend-redis:
	@echo "üöÄ Starting Redis service..."
	@docker-compose --profile backend up -d redis
	@echo "Redis service started! Access at localhost:6380"

backend-fastify:
	@echo "üöÄ Starting Fastify service..."
	@./scripts/detect-mode.sh
	@docker-compose --profile backend up -d fastify
	@echo "Fastify service started! Access at http://localhost:2000"

backend-full:
	@echo "üöÄ Starting all backend services..."
	@./scripts/detect-mode.sh
	@docker-compose --profile backend up -d --build
	@echo "All backend services started!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

# Mode-specific commands
dev:
	@echo "üîß Starting backend development mode..."
	@DOCKER_MODE=development ./scripts/detect-mode.sh
	@DOCKER_MODE=development docker-compose --profile backend up -d --build
	@echo "Backend development mode started!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

prod:
	@echo "üè≠ Starting backend production mode..."
	@DOCKER_MODE=production ./scripts/detect-mode.sh
	@DOCKER_MODE=production docker-compose --profile backend up -d --build
	@echo "Backend production mode started!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

# Full-Stack Development Commands
fullstack:
	@echo "üöÄ Starting full-stack development with backend focus..."
	@./scripts/detect-mode.sh
	@docker-compose --profile backend up -d --build
	@echo "Full-stack backend development started!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

fullstack-dev:
	@echo "üîß Starting full-stack development mode..."
	@DOCKER_MODE=development ./scripts/detect-mode.sh
	@DOCKER_MODE=development docker-compose --profile backend up -d --build
	@echo "Full-stack development mode started!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

fullstack-prod:
	@echo "üè≠ Starting full-stack production mode..."
	@DOCKER_MODE=production ./scripts/detect-mode.sh
	@DOCKER_MODE=production docker-compose --profile backend up -d --build
	@echo "Full-stack production mode started!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

fullstack-test:
	@echo "üß™ Testing full-stack backend endpoints..."
	@echo "Testing FastAPI backend..."
	@curl -s http://localhost:8000/ || echo "FastAPI backend not responding"
	@echo "Testing Fastify service..."
	@curl -s http://localhost:2000/health || echo "Fastify service not responding"
	@echo "Testing Redis connection..."
	@docker-compose --profile backend exec redis redis-cli ping || echo "Redis not responding"

fullstack-build:
	@echo "üî® Building full-stack backend Docker images..."
	@./scripts/detect-mode.sh
	@docker-compose --profile backend build
	@echo "Full-stack backend images built successfully"

fullstack-clean:
	@echo "üßπ Cleaning full-stack backend environment..."
	@docker-compose --profile backend down
	@docker system prune -f
	@echo "Full-stack backend environment cleaned"

fullstack-logs:
	@echo "üìã Viewing full-stack backend logs..."
	@docker-compose --profile backend logs -f

fullstack-status:
	@echo "üìä Full-stack backend service status..."
	@docker-compose --profile backend ps

fullstack-shell:
	@echo "üêö Opening shell in full-stack backend container..."
	@docker-compose --profile backend exec fastapi sh

# Hybrid Integration Commands
fullstack-hybrid:
	@echo "üîó Starting full-stack with hybrid backend integration..."
	@./scripts/detect-mode.sh
	@docker-compose --profile backend up -d --build
	@echo "Full-stack hybrid backend integration started!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

fullstack-hybrid-dev:
	@echo "üîß Starting full-stack hybrid in development mode..."
	@DOCKER_MODE=development ./scripts/detect-mode.sh
	@DOCKER_MODE=development docker-compose --profile backend up -d --build
	@echo "Full-stack hybrid development mode started!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

fullstack-hybrid-prod:
	@echo "üè≠ Starting full-stack hybrid in production mode..."
	@DOCKER_MODE=production ./scripts/detect-mode.sh
	@DOCKER_MODE=production docker-compose --profile backend up -d --build
	@echo "Full-stack hybrid production mode started!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

# Cross-Repo Development Support
fullstack-cross-repo:
	@echo "üîÑ Starting full-stack with cross-repo development support..."
	@./scripts/detect-mode.sh
	@if [ -d "../stocknear-backend" ]; then
		@echo "Backend repository found, syncing..."
		@cd ../stocknear-backend && git pull origin main
	@else
		@echo "Backend repository not found at ../stocknear-backend"
	@fi
	@docker-compose --profile backend up -d --build
	@echo "Full-stack cross-repo development started!"
	@echo "FastAPI: http://localhost:8000"
	@echo "Fastify: http://localhost:2000"
	@echo "Redis: localhost:6380"

# Mode Detection for Full-Stack
fullstack-mode-detect:
	@echo "üîç Running full-stack mode detection..."
	@./scripts/detect-mode.sh
	@echo "Full-stack mode detection completed"

# Backend-specific mode commands
backend-dev:
	@echo "üîß Starting backend in development mode..."
	@DOCKER_MODE=development ./scripts/detect-mode.sh
	@DOCKER_MODE=development docker-compose --profile backend up -d --build
	@echo "Backend development mode started with hot reload!"

backend-prod:
	@echo "üè≠ Starting backend in production mode..."
	@DOCKER_MODE=production ./scripts/detect-mode.sh
	@DOCKER_MODE=production docker-compose --profile backend up -d --build
	@echo "Backend production mode started!"

# Database management commands
db-reset:
	@echo "üóëÔ∏è  Resetting backend databases..."
	@docker-compose --profile backend down
	@docker volume rm stocknear-frontend_redis_data 2>/dev/null || true
	@echo "Databases reset. Run 'make setup' to restart services."

db-backup:
	@echo "üíæ Backing up backend databases..."
	@mkdir -p backups
	@docker-compose --profile backend exec redis redis-cli BGSAVE
	@docker-compose --profile backend exec redis redis-cli SAVE
	@echo "Redis backup completed in container"

db-restore:
	@echo "üì• Restoring backend databases..."
	@echo "Please manually restore databases from backup files"
	@echo "Use 'make db-reset' to clear existing data first"

# Backend development workflow commands
dev-stop:
	@echo "Stopping backend development environment..."
	@make stop

dev-restart:
	@echo "Restarting backend development environment..."
	@make restart

# Service-specific log commands
api-logs:
	@echo "Viewing FastAPI logs..."
	@docker-compose --profile backend logs -f fastapi

redis-logs:
	@echo "Viewing Redis logs..."
	@docker-compose --profile backend logs -f redis

fastify-logs:
	@echo "Viewing Fastify logs..."
	@docker-compose --profile backend logs -f fastify

# Service-specific shell commands
api-shell:
	@docker-compose --profile backend exec fastapi sh

fastify-shell:
	@docker-compose --profile backend exec fastify sh

redis-cli:
	@docker-compose --profile backend exec redis redis-cli

# Cross-repo development commands
backend-check:
	@echo "üîç Checking backend repository..."
	@if [ -d "../stocknear-backend" ]; then
		@echo "Backend repository found at ../stocknear-backend"
		@ls -la ../stocknear-backend/
	@else
		@echo "Backend repository not found at ../stocknear-backend"
		@echo "Please clone the backend repository or update paths"
	@fi

backend-sync:
	@echo "üîÑ Syncing backend repository..."
	@if [ -d "../stocknear-backend" ]; then
		@cd ../stocknear-backend && git pull origin main
		@echo "Backend repository synced"
	@else
		@echo "Backend repository not found"
	@fi

# Quick development commands
dev-logs:
	@echo "Viewing backend development logs..."
	@make api-logs

dev-status:
	@echo "Checking backend development status..."
	@make status

# Production commands
prod-build:
	@echo "Building production backend images..."
	@export DOCKER_MODE=production
	@./scripts/detect-mode.sh
	@docker-compose --profile backend build

prod-run:
	@echo "Running production backend containers..."
	@DOCKER_MODE=production docker-compose --profile backend up -d

# Utility commands
check-deps:
	@echo "Checking backend dependencies..."
	@docker --version || echo "Docker not installed"
	@docker-compose --version || echo "Docker Compose not installed"
	@echo "Checking backend repository..."
	@if [ -d "../stocknear-backend" ]; then
		@echo "‚úÖ Backend repository found"
	@else
		@echo "‚ùå Backend repository not found at ../stocknear-backend"
	@fi

info:
	@echo "StockNear Backend Docker Information"
	@echo "Profile: backend"
	@echo "Modes: development, production"
	@echo "Services: fastapi, redis, fastify"
	@echo "Ports: 8000 (fastapi), 2000 (fastify), 6380 (redis)"
	@echo "Network: stocknear-network"
	@echo "Backend Repository: ../stocknear-backend"
	@./scripts/detect-mode.sh

# Health check commands
health-check:
	@echo "üîç Checking backend service health..."
	@echo "FastAPI health check..."
	@curl -s http://localhost:8000/ || echo "FastAPI not healthy"
	@echo "Fastify health check..."
	@curl -s http://localhost:2000/health || echo "Fastify not healthy"
	@echo "Redis health check..."
	@docker-compose --profile backend exec redis redis-cli ping || echo "Redis not healthy"

# Backend-specific status commands
status-api:
	@docker-compose --profile backend ps fastapi

status-redis:
	@docker-compose --profile backend ps redis

status-fastify:
	@docker-compose --profile backend ps fastify

# Cross-repo development support
backend-rebuild:
	@echo "üî® Rebuilding backend services from source..."
	@./scripts/detect-mode.sh
	@docker-compose --profile backend build --no-cache
	@docker-compose --profile backend up -d
	@echo "Backend services rebuilt and restarted"

backend-update:
	@echo "üîÑ Updating backend services..."
	@make backend-sync
	@make backend-rebuild
	@echo "Backend services updated"

# Hybrid integration support
hybrid-dev:
	@echo "üîß Starting hybrid development mode..."
	@DOCKER_MODE=development ./scripts/detect-mode.sh
	@DOCKER_MODE=development docker-compose --profile backend up -d --build
	@echo "Hybrid development mode started!"
	@echo "Backend services running with development configuration"

hybrid-prod:
	@echo "üè≠ Starting hybrid production mode..."
	@DOCKER_MODE=production ./scripts/detect-mode.sh
	@DOCKER_MODE=production docker-compose --profile backend up -d --build
	@echo "Hybrid production mode started!"
	@echo "Backend services running with production configuration" 